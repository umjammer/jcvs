#
# spec.config.path.name=propertyType:propertyName:description
#
# Property Types:
#
#   string
#   point
#   dimension
#   rectangle
#   color
#   font
#   integer
#   long
#   float
#   double
#   boolean
#   stringarray
#   choice
#   tokens
#   tupletable
#
# choice.property.name.N=Choice Name
#

# ---------------------------------------------------------------------
# Global.
# ---------------------------------------------------------------------


#
# The UI Setting Choice.
#
plafClass.spec=plafcls
plafClass.path=Look And Feel.LAF Style
plafClass.name=plaf.lookAndFeel.classname
plafClass.desc=\
The look and feel to use for the user interface.\n\n\
The 'default' choice will give you what is configured \
as the system default. The 'metal' choice specifically \
selects the Java Metal look and feel.


#
# The Temporary Directory property.
#
gTempDir.spec=string
gTempDir.path=Global.Temp Directory
gTempDir.name=global.temporaryDirectory
gTempDir.desc=\
The temporary directory used during CVS operations.

#
# The CVS Log File Path.
#
gLogFile.spec=string
gLogFile.path=Global.Log File
gLogFile.name=global.cvsLogFileName
gLogFile.desc=\
The path of the file to use for CVSLog logging.\n\n\
CVSLog is used for logging protocol traces and other \
debugging information.\n\n\
If you do not specify a path in the name, the file will \
be created in the current directory.


#
# The global "CVSProject.overTrace____" settings
#
gTraceAll.spec=boolean
gTraceAll.path=Global.Trace Protocol
gTraceAll.name=global.traceAll
gTraceAll.desc=\
Sets the 'global' CVS protocol tracing flags.\n\n\
If you select 'Trace Protocol', then all CVS commands will \
log all of the CVS protocol to your log file. This will assist \
in efforts to debug jCVS operation.


#
# The "Allow GZIP File Compression" property.
#
gAllowGzip.spec=boolean
gAllowGzip.path=Global.GZIP File Mode
gAllowGzip.name=global.allowGzipFileMode
gAllowGzip.desc=\
Allow file-level GZIP compression.
gAllowGzip.help=\
Whether or not GZIP compression is allowed to be used for file transfers.\n\n\
Set this property to false if you get complaints from the server that \
state something like "couldn't exec gzip".\n\n\
If you are not sure if you should use this setting, leave it set to 'False'.


#
# The "Gzip Stream Level" property.
#
gGzipStream.spec=integer
gGzipStream.path=Global.GZIP Stream Level
gGzipStream.name=global.gzipStreamLevel
gGzipStream.desc=\
The GZIP stream compression level.
gGzipStream.help=\
The GZIP stream compression level.\n\n\
This determines the level of compression used to compress the protocol \
stream. The level should a value from 0 to 9. If you set the level to \
zero, compression is disabled. If you set the level to 9, you get maximum \
compression. Level 6 is a reasonable default if you used compression.\n\n\
This compression is much preferrable to 'GZIP File Compression", as this \
method compresses the entire protocol stream, not just the files transferred.


#
# Should we LOAD the DEFAULT SERVER DEFinitions?
#
gLoadServers.spec=boolean
gLoadServers.path=Global.Load Servers
gLoadServers.name=global.loadDefaultServerDefs
gLoadServers.desc=\
Whether the default CVS server definitions should be loaded.\n\n\
Set this to 'False' if you no longer want the default servers listed \
with your own server definitions.

#
# The RSH command to use as opposed to jCVS's internal implementation.
#
gRSHCommand.spec=string
gRSHCommand.path=Global.RSH Command
gRSHCommand.name=global.rshCommand
gRSHCommand.desc=\
Defines the path to the rsh command.
gRSHCommand.help=\
This setting defines the path to the rsh command.\n\n\
If you are using jCVS under UNIX, the internal rsh implementation will not \
work because it will no be able to create a 'priveleged' socket (512-1024).\n\n\
If you are running on Windows or Macintosh, set this path to an empty string \
to use jCVS's internal RSH implementation.\n\n\
If you are running on UNIX, set this path to the location of your rsh command, \
which is typically "/usr/bin/rsh".

#
# The Server command to use to invoke cvs.
# Key       is hostName.
# column(0) is server command
#
gSvrCommand.spec=srvrcmd
gSvrCommand.path=Global.Server Commands
gSvrCommand.name=global.serverTable
#gSvrCommand.desc=CVS server command for each host.
gSvrCommand.help=\
This setting defines the server command used to invoke the cvs program.\n\n\
For each hostname in the first column of the table, the corresponding value \
in the second column of the table will be used as the command used to invoke \
the cvs program on the server.\n\n\
Please note this only applies to the 'Server' connection method.\n\n\
Use the hostname "DEFAULT" to define a default command for hosts that do \
not have server commands defined explicitly.

#
# User Ignores
#
adv.userIgnores.spec=string
adv.userIgnores.path=Global.User Ignores
adv.userIgnores.name=global.userIgnores
adv.userIgnores.desc=\
The user's ignore specification.
adv.userIgnores.help=\
This CVS ignore specification will be added to the default CVS \
ignore specification. For instance, Java programmers might add \
'*.class' here to ignore compiled class files.

# ---------------------------------------------------------------------
# WorkBench.
# ---------------------------------------------------------------------

#
# The Workbench Title color, font, and height.
#
wbDetails.bg.spec=color
wbDetails.bg.path=WorkBench.Title Color
wbDetails.bg.name=workBench.details.title.bg
wbDetails.bg.desc=\
The background color used for the title bar in the Work Bench's \
Project Details panel.

wbDetails.font.spec=font
wbDetails.font.path=WorkBench.Title Font
wbDetails.font.name=workBench.details.title.font
wbDetails.font.desc=\
The font used for the title bar text in the Work Bench's \
Project Details panel.

wbDetails.height.spec=integer
wbDetails.height.path=WorkBench.Title Height
wbDetails.height.name=workBench.details.title.height
wbDetails.height.desc=\
The height of the title bar in the Work Bench's \
Project Details panel.

# ---------------------------------------------------------------------
# Actions.
# ---------------------------------------------------------------------

#
# The "Use JAF For Exec-ing File Verbs" property.
#
gUseJAF.spec=boolean
gUseJAF.path=Actions.Use JAF
gUseJAF.name=global.useJAF
gUseJAF.desc=\
	Use Java Activation Foundation (JAF) to open files.
gUseJAF.help=\
	Whether or not the Java Activation Foundation (JAF) is used for.\
	driving the action verbs.\n\n\
	Set this preference to true if you wish to use JAF. This will cause \
	jCVS to use JAF to drive action verbs such as open and edit. JAF \
	requires that you properly setup the mime types and mailcap files.\n\n\
	Set this preference to false if you do not wish to use JAF. This is \
	the default, as most people do not like to setup their mime and mailcap \
	files. If you are having problems getting your file to open when you \
	double click on it, try setting this to false.

#
# The Exec Commands.
#
gExecCommand.spec=cmdexec
gExecCommand.path=Actions.Verb Commands
gExecCommand.name=global.exec.verbs
gExecCommand.desc=The ExecViewer's command map.
gExecCommand.help=\
The ExecViewer's verb command map.\n\n\
Each item in the combo box is an 'ext . verb' combination. \
Each item has a command line and an environment string.\n\n\
The command line is a standard argument string. The variable \
'$FILE' will be expanded to the full pathname of the file \
being acted upon. The variable '$CWD' will be expanded to \
the current working directory.\n\n\
The environment string is a string of 'key=value' environment \
settings that will be passed into the command being exec-ed. If \
this field is left empty, exec will be invoked with an environment \
which will cause exec to pass in your shell environment.\n\n\
You may define default verbs using '._DEF_.verb' definitions to \
handle extensions \ that are not defined, or files that have no \
extension.\n\n\
You can handle specific files with no extention, for instance 'Makefile', \
by defining '.Makefile.verb'.



# ---------------------------------------------------------------------
# Advanced.
# ---------------------------------------------------------------------

#
# The ADVANCED properties.
#

#
# Local Ignore FileName
#
adv.ignoreFile.spec=string
adv.ignoreFile.path=Advanced.Ignore Filename
adv.ignoreFile.name=global.ignoreFileName
adv.ignoreFile.desc=\
The local CVS ignore filename.
adv.ignoreFile.help=\
The local CVS ignore filename.\n\n \
By default, CVS reads files named '.cvsignore' for a list of files \
that should be ignored during processing. Unfortunately, some operating \
systems do not allow filenames to begin with a period. If you enter \
a filename for this property, then files with that name will be checked \
for ignore specification anytime there are found in a directory. Set this \
to the empty string to use only '.cvsignore'.

#
# Check Out Command
#
adv.checkOutCmd.spec=string
adv.checkOutCmd.path=Advanced.CheckOut Command
adv.checkOutCmd.name=global.checkOutCommand
adv.checkOutCmd.desc=\
Checkout CVS command specification.\n\n\
WARNING Changing this setting may cause checkouts to not work properly.
adv.checkOutCmd.help=\
The Checkout CVS command specification.\n\n\
WARNING Changing this setting may cause checkouts to not work properly.\n\n\
This is the CVS Command Specification string that determines the \
way that new projects are checked out. \n\nIt is not recommended that \
you change this setting unless you know exactly what you are doing. \
Refer to the "CVSCommandSpec.html" documentation for further details.

#
# Global CVS Timestamp Timezone
#
adv.cvsTimestamp.spec=string
adv.cvsTimestamp.path=Advanced.CVS Timezone
adv.cvsTimestamp.name=global.timeStamp.timeZone
adv.cvsTimestamp.desc=\
The CVS Timestamp Timezone.\n\n\
WARNING Changing this setting may cause jCVS to not work properly.
adv.cvsTimestamp.help=\
WARNING Changing this setting may cause jCVS to not work properly.\n\n\
This is the CVS Timezone. This setting determines what timezone is \
used to establish a zero offset from GMT. CVS uses GMT+00 for \
all timestamp comparisons. This will affect how CVS decides if \
files have been modified.\n\n\
The only reason to change this setting is if your JVM does not \
consider the timezone "GMT" as GMT+00 (which is a bug). For example \
JVM's from Sun prior to release 1.1.4 require this setting to be "GMT+00".

#
# The CVSProject Deep Debug setting.
#
gProject.deepDebug.spec=boolean
gProject.deepDebug.path=Advanced.Debug CVSProject
gProject.deepDebug.name=global.project.deepDebug
gProject.deepDebug.desc=\
This setting allows you to turn on extensive debugging that will \
assist in debugging project handling. This should only be true \
when you are interested in a log that can help debug a jCVS problem.

#
# The CVSProject Debug Entry IO setting.
#
gProject.debugEntryIO.spec=boolean
gProject.debugEntryIO.path=Advanced.Debug EntryIO
gProject.debugEntryIO.name=global.project.debugEntryIO
gProject.debugEntryIO.desc=\
This setting allows you to turn on extensive debugging that will \
assist in debugging CVS administration file IO. This should only be true \
when you are interested in a log that can help debug a jCVS problem.


# ---------------------------------------------------------------------
# Project Window.
# ---------------------------------------------------------------------

#
# The Project Window Entry Tree Font.
#
projW.tree.font.spec=font
projW.tree.font.path=Project Window.Entries Font
projW.tree.font.name=project.tree.font
projW.tree.font.desc=\
The font used to display the entries tree in a Project window.

#
# The Project Window Entry Tree Modified Date Format.
#
projW.mod.format.spec=string
projW.mod.format.path=Project Window.Modified Format
projW.mod.format.name=project.modified.format
projW.mod.format.desc=\
The SimpleDateFormat to use to format the file's modified \
time when displayed in the Project window. See the JavaDoc \
documentation for java.test.SimpleDateFormat for more details.

#
# The verb that will be fired when the entry is double clicked
# in the EntryTree in the EntryPanel.
#
projW.dblClkVerb.spec=string
projW.dblClkVerb.path=Project Window.Double Click Verb
projW.dblClkVerb.name=project.tree.doubleClickVerb
projW.dblClkVerb.desc=\
The verb that will be "fired" when you double click on an entry \
in a Project window.\n\n\
This verb is used to locate an entry from your mailcap file to \
determine how to act upon the file.

#
# The "content type" of the project details dialog. Either "text/plain"
# or "text/html".
#
projW.detailsType.spec=choice
projW.detailsType.path=Project Window.Details Style
projW.detailsType.name=project.details.content.type
projW.detailsType.choice.0=text/html
projW.detailsType.choice.1=text/plain
projW.detailsType.desc=\
The style of the dialog used to show project details.\n\n\
Use the style 'text/html' for an HTML formatted version. Use \
the style 'text/plain' for a simpler and more lightweight text version.

#
# Whether or not to show the little lines between the entry tree nodes.
#
projW.showLines.spec=choice
projW.showLines.path=Project Window.Entries Line Style
projW.showLines.name=project.tree.linestyle
projW.showLines.choice.0=None
projW.showLines.choice.1=Angled
projW.showLines.choice.2=Horizontal
projW.showLines.desc=\
Determines the line style of the entries tree in the project window.
